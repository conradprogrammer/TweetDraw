<Application x:Class="TweetDraw.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TweetDraw.UserControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:TabSizeConverter x:Key="tabSizeConverter" />
        <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <local:BoolToCompletedConverted x:Key="BoolToCompletedConverted"/>
        <local:CounterCoverter x:Key="CounterCoverter"/>
        <Color x:Key="Back">#171a1b</Color>
        <Color x:Key="Border">#3fff</Color>
        <Color x:Key="DarkBack">#3000</Color>
        <Color x:Key="Dark">#111</Color>
        <Color x:Key="Light">#eee</Color>
        <Color x:Key="Blue">#007bff</Color>
        <Color x:Key="DarkBlue">#004bcf</Color>
        <Color x:Key="Grey">#323a40</Color>
        <Color x:Key="DarkGrey">#555</Color>
        <Color x:Key="Red">#100203</Color>
        <Color x:Key="Green">#021003</Color>
        
        <SolidColorBrush x:Key="bBorder" Color="{DynamicResource Border}"/>
        <SolidColorBrush x:Key="bDarkBack" Color="{DynamicResource DarkBack}"/>
        <SolidColorBrush x:Key="bDark" Color="{DynamicResource Dark}"/>
        <SolidColorBrush x:Key="bBack" Color="{DynamicResource Back}"/>
        <SolidColorBrush x:Key="bLight" Color="{DynamicResource Light}"/>
        <SolidColorBrush x:Key="bBlue" Color="{DynamicResource Blue}"/>
        <SolidColorBrush x:Key="bDarkBlue" Color="{DynamicResource DarkBlue}"/>
        <SolidColorBrush x:Key="bGrey" Color="{DynamicResource Grey}"/>
        <SolidColorBrush x:Key="bDarkGrey" Color="{DynamicResource DarkGrey}"/>
        <SolidColorBrush x:Key="bGreen" Color="{DynamicResource Green}"/>
        <SolidColorBrush x:Key="bRed" Color="{DynamicResource Red}"/>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <Border 
                  Background="{DynamicResource bDarkBack}"
                  BorderThickness="0" />
                <Border
                  Grid.Column="1"
                  CornerRadius="3"
                  Margin="1"
                  Background="{DynamicResource bBack}"
                  BorderThickness="0" />
                <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource bLight}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <Style x:Key="DarkCombo" TargetType="ComboBox">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton 
                            Name="ToggleButton" 
                            Template="{DynamicResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{DynamicResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                        x:Name="DropDownBorder"
                                        Background="{DynamicResource bBack}"

                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource bBorder}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEditable"  Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="CaretBrush" Value="{DynamicResource bLight}"/>
        </Style>
        <Style TargetType="TextBlock" >
            <Setter Property="Foreground" Value="{DynamicResource bLight}"/>
        </Style>
        <Style x:Key="ListSymbol" TargetType="TextBlock">
            <Setter Property="Text" Value="-"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Berlin Sans FB"/>
            <Setter Property="FontWeight" Value="Heavy"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>
        <Style x:Key="Title" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource bLight}"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="BlueBtn" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource bBlue}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20 0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bDarkBlue}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource bGrey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="BottomBtn" TargetType="Button">
            <Setter Property="Background" Value="{DynamicResource bDarkBack}"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20 0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bDark}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ActionBtn" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="10" BorderThickness="3" BorderBrush="{DynamicResource bBlue}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="20 8"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource bDarkBlue}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Foreground" Value="{DynamicResource bBorder}"/>
            <Setter Property="Background" Value="{DynamicResource bBack}"/>
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource tabSizeConverter}" UpdateSourceTrigger="PropertyChanged">
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TabControl}"/>
                        <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=TabControl}" Path="ActualWidth" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="border" Margin="0" CornerRadius="6" BorderBrush="{DynamicResource bBorder}" Background="{TemplateBinding Background}"
                        BorderThickness="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <StackPanel Margin="12" Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter ContentSource="Header"  VerticalAlignment="Center" 
                                            HorizontalAlignment="Stretch" Margin="10,0,0,0"></ContentPresenter>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource bDark}"/>
                            </Trigger>
                            <Trigger SourceName="border" Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource bDark}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ScrollBar">
            <Setter Property="Margin" Value="0 10 -10 10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <ControlTemplate.Resources>
                            <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource bDark}" BorderThickness="1"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource bDarkGrey}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border CornerRadius="4" Background="{TemplateBinding Background}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource bDarkBack}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Background" Value="{DynamicResource bDark}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderThickness="0" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource bDarkGrey}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>
                        <Grid Width="8">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="30"/>
                                <RowDefinition MinHeight="0" Height="0.00001*"/>
                                <RowDefinition MaxHeight="30"/>
                            </Grid.RowDefinitions>
                            <RepeatButton Style="{DynamicResource ScrollBarLineButton}" Grid.Row="0" Command="ScrollBar.LineUpCommand"/>
                            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ScrollBarThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{DynamicResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Style="{DynamicResource ScrollBarLineButton}" Grid.Row="2" Command="ScrollBar.LineDownCommand" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Border" x:Key="Card">
            <Setter Property="Background" Value="{DynamicResource bDark}"/>
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Padding" Value="20"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="Label">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="Value">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>

        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource bBack}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="back" Width="25" Height="14" CornerRadius="7" Background="{DynamicResource bBlue}" BorderBrush="{DynamicResource bBlue}" BorderThickness="1"/>
                            <Border x:Name="button" Width="11" Height="11" CornerRadius="6" Background="{DynamicResource bLight}" Margin="2"/>
                            <ContentPresenter Grid.Column="1" Margin="5 0 0 3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="button" Property="HorizontalAlignment" Value="Right"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="button" Property="HorizontalAlignment" Value="Left"/>
                                <Setter TargetName="button" Property="Background" Value="{DynamicResource bGrey}"/>
                                <Setter TargetName="back" Property="Background" Value="{DynamicResource bLight}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
